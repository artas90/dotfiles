{
    "[css]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[django-html]": {
        "editor.defaultFormatter": "monosans.djlint"
    },
    "[javascript]": {
        "editor.defaultFormatter": "vscode.typescript-language-features"
    },
    "[javascriptreact]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[json]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[jsonc]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[kotlin]": {
        "editor.defaultFormatter": "esafirm.kotlin-formatter"
    },
    "[scss]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[typescript]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[typescriptreact]": {
        "editor.defaultFormatter": "vscode.typescript-language-features"
    },
    "[vue]": {
        "editor.defaultFormatter": "Vue.volar"
    },
    "breadcrumbs.enabled": true,
    "command-runner.commands": {
        "Open in nvim": "  nvim.o ${file}",
        "djLint": "  djLint ${file} --reformat --indent=2 --max-line-length=120 --preserve-blank-lines",
        "djLint0": "  djLint ${file} --reformat --indent=2 --max-line-length=120 --blank-line-after-tag --line-break-after-multiline-tag",
        "echo python": "  deno run -A ${homedir}/.dotfiles/bin/dfb-format-test.js ${workspaceFolder} ${relativeFile} ${selectedLocation}",
        "ruff": "  ruff format ${file}"
    },
    "command-runner.terminal.autoClear": true,
    "command-runner.terminal.autoFocus": true,
    "command-runner.terminal.name": "C-R",
    "diffEditor.ignoreTrimWhitespace": false,
    "diffEditor.renderSideBySide": true,
    "editor.accessibilitySupport": "off",
    "editor.colorDecorators": true,
    "editor.fontFamily": "'Cascadia Code NF', Monaco, 'Courier New', monospace",
    "editor.fontLigatures": true,
    "editor.fontSize": 16,
    "editor.lineHeight": 17,
    "editor.renderWhitespace": "none",
    "editor.rulers": [
        80,
        120
    ],
    "editor.semanticHighlighting.enabled": true,
    "editor.snippetSuggestions": "top",
    "editor.suggestSelection": "first",
    "editor.tabSize": 2,
    "editor.unicodeHighlight.ambiguousCharacters": false,
    "editor.unicodeHighlight.invisibleCharacters": false,
    "explorer.confirmDelete": false,
    "explorer.confirmDragAndDrop": false,
    "files.associations": {
        "*.strings": "plist"
    },
    "files.exclude": {
        "**/.classpath": true,
        "**/.factorypath": true,
        "**/.project": true,
        "**/.settings": true
    },
    "git.autofetch": false,
    "git.confirmSync": true,
    "git.enableSmartCommit": true,
    "git.openRepositoryInParentFolders": "never",
    "html.format.enable": false,
    "javascript.updateImportsOnFileMove.enabled": "always",
    "json.format.enable": false,
    "material-icon-theme.activeIconPack": "angular_ngrx",
    "notebook.cellToolbarLocation": {
        "default": "right",
        "jupyter-notebook": "left"
    },
    "python.analysis.useLibraryCodeForTypes": false,
    "python.terminal.activateEnvironment": false,
    "remote.SSH.defaultExtensions": [
        "donjayamanne.python-extension-pack",
        "Affirm.pre-commit-tasks",
        "ms-kubernetes-tools.vscode-kubernetes-tools",
        "ms-python.python",
        "rioj7.command-variable"
    ],
    "remote.SSH.remotePlatform": {
        "artas90-thor-leech.dev.aff.teleport.core.affirm-dev.com": "linux",
        "artas90-thor-omanyte.dev.aff.teleport.core.affirm-dev.com": "linux",
        "dotfiles.devpod": "linux",
        "snippets.devpod": "linux"
    },
    "remote.SSH.useExecServer": false,
    "remote.SSH.useLocalServer": false,
    "security.workspace.trust.untrustedFiles": "open",
    "separators.classes.borderStyle": "solid",
    "separators.classes.borderWidth": 1,
    "separators.constructors.borderStyle": "dashed",
    "separators.constructors.borderWidth": 1,
    "separators.enums.borderStyle": "dashed",
    "separators.enums.borderWidth": 1,
    "separators.functions.borderStyle": "solid",
    "separators.functions.borderWidth": 1,
    "separators.interfaces.borderStyle": "dotted",
    "separators.interfaces.borderWidth": 1,
    "separators.maxDepth": 2,
    "separators.methods.borderStyle": "dashed",
    "separators.methods.borderWidth": 1,
    "separators.namespaces.borderStyle": "dashed",
    "separators.namespaces.borderWidth": 1,
    "separators.structs.borderStyle": "dashed",
    "separators.structs.borderWidth": 1,
    "terminal.integrated.enableMultiLinePasteWarning": false,
    "terminal.integrated.fontSize": 16,
    "terminal.integrated.tabs.enabled": true,
    "terminal.integrated.tabs.hideCondition": "never",
    "terminal.integrated.tabs.location": "left",
    "typescript.updateImportsOnFileMove.enabled": "never",
    "window.commandCenter": false,
    "window.title": "${activeEditorFull}${separator}${rootName}",
    "workbench.colorCustomizations": {
        "separators.classes.borderColor": "#777",
        "separators.constructors.borderColor": "#777",
        "separators.enums.borderColor": "#777",
        "separators.functions.borderColor": "#777",
        "separators.interfaces.borderColor": "#777",
        "separators.methods.borderColor": "#777",
        "separators.namespaces.borderColor": "#777",
        "separators.structs.borderColor": "#777",
        "statusBar.background": "#555",
        "statusBar.noFolderBackground": "#565"
    },
    "workbench.editor.enablePreview": false,
    "workbench.editorAssociations": {
        "*.ipynb": "jupyter-notebook"
    },
    "workbench.iconTheme": "material-icon-theme",
    "workbench.productIconTheme": "material-product-icons",
    "makefile.configureOnOpen": false,
    "djlint.showInstallError": false,
    "workbench.colorTheme": "Darcula Theme from IntelliJ",

    "workbench.editor.limit.enabled": true,
    "workbench.editor.limit.value": 15,
    "workbench.editor.tabSizing": "shrink",
    "workbench.panel.defaultLocation": "left",
    "workbench.editor.showTabs": "none",
    "redhat.telemetry.enabled": false,
    
}